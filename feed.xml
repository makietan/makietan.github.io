<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="ja"><generator uri="https://jekyllrb.com/" version="4.3.2">Jekyll</generator><link href="https://makietan.github.io/feed.xml" rel="self" type="application/atom+xml" /><link href="https://makietan.github.io/" rel="alternate" type="text/html" hreflang="ja" /><updated>2024-10-18T19:14:20+09:00</updated><id>https://makietan.github.io/feed.xml</id><title type="html">肉とお米とブロッコリー</title><subtitle>ここは日報をメインに書きます.</subtitle><author><name>makietan</name></author><entry><title type="html">JavaScriptで継承(extends)した場合に「static」の挙動はどうなるのか</title><link href="https://makietan.github.io/tech/2024/10/18/report.html" rel="alternate" type="text/html" title="JavaScriptで継承(extends)した場合に「static」の挙動はどうなるのか" /><published>2024-10-18T00:00:00+09:00</published><updated>2024-10-18T00:00:00+09:00</updated><id>https://makietan.github.io/tech/2024/10/18/report</id><content type="html" xml:base="https://makietan.github.io/tech/2024/10/18/report.html"><![CDATA[<p>JavaScript を使っていて継承 <code class="language-plaintext highlighter-rouge">extends</code> した場合に <code class="language-plaintext highlighter-rouge">static</code> の挙動がどうなるのか気になったので調べてみた。</p>

<ol>
  <li>継承した class 名で親の static 要素は利用できるのか</li>
  <li>オーバーライドが可能か？</li>
</ol>

<h2 id="1-継承した-class-名で親の-static-要素は利用できるのか">1. 継承した class 名で親の static 要素は利用できるのか</h2>

<p>まずは継承したら元の <code class="language-plaintext highlighter-rouge">static</code> は利用できるのかどうかを検証する。</p>

<h3 id="検証">検証</h3>

<p>以下のサイトのコードを引用して、それを継承した <code class="language-plaintext highlighter-rouge">Hoge</code> クラスを作り、各 <code class="language-plaintext highlighter-rouge">static</code> な要素を検証してきます。</p>

<div class="card">
  <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Classes/static"></a>
  <div class="card__header">
    <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Classes/static">developer.mozilla.org</a>
  </div>
  <div class="card__image">
    <img src="https://developer.mozilla.org/mdn-social-share.d893525a4fb5fb1f67a2.png" />
  </div>
  <div class="card__title">
    <p>static - JavaScript | MDN</p>
  </div>
  <div class="card__description">
    <p>The static keyword defines a static method or field for a class, or a static initialization block (see the link for more information about this usage). Static properties cannot be directly accessed on instances of the class. Instead, they're accessed on the class itself.</p>
  </div>
</div>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">class</span> <span class="nc">ClassWithStaticMethod</span> <span class="p">{</span>
  <span class="kd">static</span> <span class="nx">staticProperty</span> <span class="o">=</span> <span class="dl">'</span><span class="s1">someValue</span><span class="dl">'</span><span class="p">;</span>
  <span class="kd">static</span> <span class="nf">staticMethod</span><span class="p">()</span> <span class="p">{</span>
    <span class="k">return</span> <span class="dl">'</span><span class="s1">static method has been called.</span><span class="dl">'</span><span class="p">;</span>
  <span class="p">}</span>
  <span class="kd">static</span> <span class="p">{</span>
    <span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="dl">'</span><span class="s1">Class static initialization block called</span><span class="dl">'</span><span class="p">);</span>
  <span class="p">}</span>
<span class="p">}</span>

<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="nx">ClassWithStaticMethod</span><span class="p">.</span><span class="nx">staticProperty</span><span class="p">);</span>
<span class="c1">// Expected output: "someValue"</span>
<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="nx">ClassWithStaticMethod</span><span class="p">.</span><span class="nf">staticMethod</span><span class="p">());</span>
<span class="c1">// Expected output: "static method has been called."</span>

<span class="kd">class</span> <span class="nc">Hoge</span> <span class="kd">extends</span> <span class="nc">ClassWithStaticMethod</span> <span class="p">{</span>
<span class="p">}</span>

<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="nx">Hoge</span><span class="p">.</span><span class="nx">staticProperty</span><span class="p">);</span>
<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="nx">Hoge</span><span class="p">.</span><span class="nf">staticMethod</span><span class="p">());</span>
</code></pre></div></div>

<h3 id="出力結果">出力結果</h3>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;</span> <span class="s2">"Class static initialization block called"</span>
<span class="o">&gt;</span> <span class="s2">"someValue"</span>
<span class="o">&gt;</span> <span class="s2">"static method has been called."</span>
<span class="o">&gt;</span> <span class="s2">"someValue"</span>
<span class="o">&gt;</span> <span class="s2">"static method has been called."</span>
</code></pre></div></div>

<p>問題なく呼ぶことができました。</p>

<h2 id="2-オーバーライドが可能か">2. オーバーライドが可能か？</h2>

<p>次に <code class="language-plaintext highlighter-rouge">static</code> はオーバーライドできるかどうかです。
JavaScript は自由度がいい意味でも悪い意味でも高いので、おそらくできてしまうだろうというのが予想です。</p>

<p>さて、実際にはどうなのか検証していきます。</p>

<p>1と同様に以下のサイトのコードを引用して、それを継承した <code class="language-plaintext highlighter-rouge">Hoge</code> クラスを作り、各 <code class="language-plaintext highlighter-rouge">static</code> をオーバーライドしていきます。</p>

<div class="card">
  <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Classes/static"></a>
  <div class="card__header">
    <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Classes/static">developer.mozilla.org</a>
  </div>
  <div class="card__image">
    <img src="https://developer.mozilla.org/mdn-social-share.d893525a4fb5fb1f67a2.png" />
  </div>
  <div class="card__title">
    <p>static - JavaScript | MDN</p>
  </div>
  <div class="card__description">
    <p>The static keyword defines a static method or field for a class, or a static initialization block (see the link for more information about this usage). Static properties cannot be directly accessed on instances of the class. Instead, they're accessed on the class itself.</p>
  </div>
</div>

<h3 id="検証-1">検証</h3>

<p>オーバーライドできた場合は <a href="https://ja.wikipedia.org/wiki/%E3%83%A1%E3%82%BF%E6%A7%8B%E6%96%87%E5%A4%89%E6%95%B0">メタ構文変数
</a>が表示されます。</p>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">class</span> <span class="nc">ClassWithStaticMethod</span> <span class="p">{</span>
  <span class="kd">static</span> <span class="nx">staticProperty</span> <span class="o">=</span> <span class="dl">'</span><span class="s1">someValue</span><span class="dl">'</span><span class="p">;</span>
  <span class="kd">static</span> <span class="nf">staticMethod</span><span class="p">()</span> <span class="p">{</span>
    <span class="k">return</span> <span class="dl">'</span><span class="s1">static method has been called.</span><span class="dl">'</span><span class="p">;</span>
  <span class="p">}</span>
  <span class="kd">static</span> <span class="p">{</span>
    <span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="dl">'</span><span class="s1">Class static initialization block called</span><span class="dl">'</span><span class="p">);</span>
  <span class="p">}</span>
<span class="p">}</span>

<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="nx">ClassWithStaticMethod</span><span class="p">.</span><span class="nx">staticProperty</span><span class="p">);</span>
<span class="c1">// Expected output: "someValue"</span>
<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="nx">ClassWithStaticMethod</span><span class="p">.</span><span class="nf">staticMethod</span><span class="p">());</span>
<span class="c1">// Expected output: "static method has been called."</span>

<span class="kd">class</span> <span class="nc">Hoge</span> <span class="kd">extends</span> <span class="nc">ClassWithStaticMethod</span> <span class="p">{</span>
  <span class="kd">static</span> <span class="nx">staticProperty</span> <span class="o">=</span> <span class="dl">'</span><span class="s1">fuga</span><span class="dl">'</span><span class="p">;</span>
  <span class="kd">static</span> <span class="nf">staticMethod</span><span class="p">()</span> <span class="p">{</span>
    <span class="k">return</span> <span class="dl">"</span><span class="s2">piyo</span><span class="dl">"</span><span class="p">;</span>
  <span class="p">}</span>
  <span class="kd">static</span> <span class="p">{</span>
    <span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="dl">"</span><span class="s2">hogera</span><span class="dl">"</span><span class="p">);</span>
  <span class="p">}</span>
<span class="p">}</span>

<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="nx">Hoge</span><span class="p">.</span><span class="nx">staticProperty</span><span class="p">);</span>
<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="nx">Hoge</span><span class="p">.</span><span class="nf">staticMethod</span><span class="p">());</span>
</code></pre></div></div>

<h3 id="出力結果-1">出力結果</h3>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;</span> <span class="s2">"Class static initialization block called"</span>
<span class="o">&gt;</span> <span class="s2">"someValue"</span>
<span class="o">&gt;</span> <span class="s2">"static method has been called."</span>
<span class="o">&gt;</span> <span class="s2">"hogera"</span>
<span class="o">&gt;</span> <span class="s2">"fuga"</span>
<span class="o">&gt;</span> <span class="s2">"piyo"</span>
</code></pre></div></div>

<p>継承は可能ということがわかった。</p>

<p><code class="language-plaintext highlighter-rouge">static</code> な initializer は 1 度しか呼ばれない。
ただし、継承後の initializer は親の initializer が呼ばれた後でも 1 度だけ呼ばれる。</p>

<h2 id="結論">結論</h2>

<p>JavaScript を使っていて継承 <code class="language-plaintext highlighter-rouge">extends</code> した場合</p>

<ul>
  <li>継承後のクラス名でも <code class="language-plaintext highlighter-rouge">static</code> 要素を利用することができた。</li>
  <li>オーバーライドが可能。</li>
  <li>initializer は別途1度だけ呼ばれる。</li>
</ul>

<p>となった。</p>]]></content><author><name>makietan</name></author><category term="tech" /><summary type="html"><![CDATA[JavaScript を使っていて継承 extends した場合に static の挙動がどうなるのか気になったので調べてみた。]]></summary></entry><entry><title type="html">10月なのに…</title><link href="https://makietan.github.io/weather/2024/10/17/report.html" rel="alternate" type="text/html" title="10月なのに…" /><published>2024-10-17T00:00:00+09:00</published><updated>2024-10-17T00:00:00+09:00</updated><id>https://makietan.github.io/weather/2024/10/17/report</id><content type="html" xml:base="https://makietan.github.io/weather/2024/10/17/report.html"><![CDATA[<ul>
  <li>最高気温: 26.0℃</li>
  <li>最低気温: 20.7℃</li>
</ul>

<div class="card">
  <a href="https://tenki.jp/past/2024/10/17/weather/"></a>
  <div class="card__header">
    <a href="https://tenki.jp/past/2024/10/17/weather/">tenki.jp</a>
  </div>
  <div class="card__image">
    <img src="https://storage.tenki.jp/archive/live/map/2024/10/17/top-large.jpg" />
  </div>
  <div class="card__title">
    <p>過去の天気(実況天気・2024年10月17日) - 日本気象協会 tenki.jp</p>
  </div>
  <div class="card__description">
    <p>過去天気の実況天気では、2024年10月17日の過去の気象情報を確認できます。エリア・日付でわかりやすく整理されています。</p>
  </div>
</div>

<p>ほんとに日本かここは？</p>

<p>曇りだったのでまだ日差しに悩まされることはなかったが、
流石に10月中旬にもなってこの気温はやりすぎだろう。</p>

<p>個人的には最高気温が20.0℃くらいのほうが快適なのだよ。</p>

<p>秋なんとかしてくれ！</p>

<p>（ちなみに日曜日に雨が降るのでそのタイミングで気温は低下しそうだけどね）</p>]]></content><author><name>makietan</name></author><category term="weather" /><summary type="html"><![CDATA[最高気温: 26.0℃ 最低気温: 20.7℃]]></summary></entry><entry><title type="html">有楽町から新橋までの大回り乗車案 その①</title><link href="https://makietan.github.io/railway/2024/10/16/report.html" rel="alternate" type="text/html" title="有楽町から新橋までの大回り乗車案 その①" /><published>2024-10-16T00:00:00+09:00</published><updated>2024-10-16T00:00:00+09:00</updated><id>https://makietan.github.io/railway/2024/10/16/report</id><content type="html" xml:base="https://makietan.github.io/railway/2024/10/16/report.html"><![CDATA[<h2 id="大回り乗車とは">大回り乗車とは</h2>

<p>大都市近郊区間内のみを利用する場合に適用される特例を応用した乗車方法のこと。
ようは電車に長く乗って風景でも見てたいなという人向けの時間潰し方法だ。</p>

<p>大都市近郊区間内のみを普通乗車券で利用する場合は、実際に乗車する経路にかかわらず、最も安くなる経路で計算した運賃で乗車することができるというもの。</p>

<p>ちなみに途中下車は不可でそこまでの運賃を請求される。</p>

<div class="card">
  <a href="https://www.jreast.co.jp/kippu/1103.html"></a>
  <div class="card__header">
    <a href="https://www.jreast.co.jp/kippu/1103.html">www.jreast.co.jp</a>
  </div>
  <div class="card__image">
    <img src="" />
  </div>
  <div class="card__title">
    <p>運賃計算の特例：JR東日本</p>
  </div>
  <div class="card__description">
    <p>JRのきっぷの種類・発売日・有効期間や、学割・団体割引をはじめとする割引料金、変更・払いもどしなど、きっぷに関するさまざまなご案内をしています。</p>
  </div>
</div>

<h2 id="山手線一周1時間3分">山手線一周（1時間3分）</h2>

<p>山手線を逆に乗るだけ。
約1時間くらいかかる。
30駅。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>発着時間：13:01発 → 14:04着
所要時間：1時間3分
乗車時間：1時間3分
乗換回数：0回
総額：146円（IC利用）
距離：1.1km

■有楽町    2番線発 
｜ 　山手線東京方面行   1.1km   3・5・7号車
｜ 　13:01-14:04［63分］
｜ 　146円
■新橋    5番線着 
</code></pre></div></div>

<h2 id="中央総武線55分">中央・総武線（55分）</h2>

<p>短いように見えるが乗り換えがあるので時間はかかる。
22駅。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>発着時間：13:01発 → 13:56着
所要時間：55分
乗車時間：46分
乗換回数：3回
総額：146円（IC利用）
距離：25.2km

■有楽町    2番線発 
｜ 　山手線東京方面行   2.1km   6・8・10号車
｜ 　13:01-13:05［4分］
｜ 　146円
◇神田（東京）    3番線着・6番線発 ［乗換3分+待ち1分］
｜ 　中央線青梅特快(青梅行)   1.3km   前～後
｜ 　13:09-13:11［2分］
｜ 　 ↓ 
◇御茶ノ水    1番線着・2番線発 ［乗換1分+待ち3分］
｜ 　中央・総武線各停(三鷹行)   7.0km   1～7号車
｜ 　13:15-13:29［14分］
｜ 　 ↓ 
◇代々木    3番線着・2番線発 ［乗換1分+待ち0分］
｜ 　山手線渋谷方面行   14.8km   3・6・8号車
｜ 　13:30-13:56［26分］
｜ 　 ↓ 
■新橋    5番線着 
</code></pre></div></div>

<h2 id="中央線南武線1時間49分">中央線・南武線（1時間49分）</h2>

<p>中央線が早いのでわりと短めで済む。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>発着時間：13:01発 → 14:50着
所要時間：1時間49分
乗車時間：1時間27分
乗換回数：3回
総額：146円（IC利用）
距離：81.2km

■有楽町    2番線発 
｜ 　山手線東京方面行   0.8km   1・3・5・10号車
｜ 　13:01-13:03［2分］
｜ 　146円
◇東京    4番線着・1番線発 ［乗換4分+待ち0分］
｜ 　中央線青梅特快(青梅行)   37.5km   1・4・6・8号車
｜ 　13:07-13:45［38分］
｜ 　 ↓ 
◇立川    6番線着・8番線発 ［乗換3分+待ち7分］
｜ 　南武線快速(川崎行)   28.0km   前／1号車
｜ 　13:55-14:28［33分］
｜ 　 ↓ 
◇武蔵小杉    1番線着・4番線発 ［乗換7分+待ち1分］
｜ 　横須賀線(君津行)   14.9km   5・8・増4号車
｜ 　14:36-14:50［14分］
｜ 　 ↓ （ 普通車 ）
■新橋    地下2番線着 
</code></pre></div></div>

<h2 id="武蔵野線3時間20分">武蔵野線（3時間20分）</h2>

<p>武蔵野線は結構かかる。待ち時間も長い。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>発着時間：13:01発 → 16:21着
所要時間：3時間20分
乗車時間：2時間30分
乗換回数：3回
総額：146円（IC利用）
距離：132.0km

■有楽町    2番線発 
｜ 　山手線東京方面行   0.8km   1・3号車
｜ 　13:01-13:03［2分］
｜ 　146円
◇東京    4番線着・京葉2番線発 ［乗換10分+待ち11分］
｜ 　武蔵野線(府中本町行)   18.2km   2・5号車
｜ 　13:24-13:48［24分］
｜ 　 ↓ 
◇市川塩浜 ≪降車不要≫     ［乗換0分+待ち0分］
｜ 　武蔵野線(府中本町行)   77.7km   
｜ 　13:48-15:13［85分］
｜ 　 ↓ 
◇府中本町    2番線着・1番線発 ［乗換4分+待ち7分］
｜ 　南武線快速(川崎行)   20.4km   前／1号車
｜ 　15:24-15:48［24分］
｜ 　 ↓ 
◇武蔵小杉    1番線着・4番線発 ［乗換7分+待ち11分］
｜ 　横須賀線(千葉行)   14.9km   5・8・増4号車
｜ 　16:06-16:21［15分］
｜ 　 ↓ （ 普通車 ）
■新橋    地下2番線着 
</code></pre></div></div>]]></content><author><name>makietan</name></author><category term="railway" /><summary type="html"><![CDATA[大回り乗車とは]]></summary></entry><entry><title type="html">焼肉ライクといえばマンガ盛り</title><link href="https://makietan.github.io/gourmet/2024/10/15/report.html" rel="alternate" type="text/html" title="焼肉ライクといえばマンガ盛り" /><published>2024-10-15T00:00:00+09:00</published><updated>2024-10-15T00:00:00+09:00</updated><id>https://makietan.github.io/gourmet/2024/10/15/report</id><content type="html" xml:base="https://makietan.github.io/gourmet/2024/10/15/report.html"><![CDATA[<p>焼肉ライクの肉の質って大して求めてなくて、どちらかといえば誰にも邪魔されずに1人で焼き肉ができるという体験型飲食店だと思っている。</p>

<p>その中で、最高のUXをくれたのが<strong>マンガ盛り</strong>である。</p>

<blockquote class="twitter-tweet tw-align-center"><p lang="ja" dir="ltr">焼肉ライクやりおる <a href="https://t.co/4sziRy44Lh">pic.twitter.com/4sziRy44Lh</a></p>&mdash; まきえたん🥦☘️ (@makietanX) <a href="https://twitter.com/makietanX/status/1600091474678276096?ref_src=twsrc%5Etfw">December 6, 2022</a></blockquote>
<script async="" src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>

<p>焼き肉の味は結局タレ次第なので今の美味しいタレを扱ってるなら問題ないだろう。</p>

<p>ふりかけは何度でも言うけどクソマズい。</p>

<hr />

<blockquote class="twitter-tweet tw-align-center"><p lang="ja" dir="ltr">マンガ盛りとかしてくれてた時はそれしか頼んでなかったなぁ<br />なお焼肉ライクに置いてあるふりかけは不味くてご飯のお供としては不合格 <a href="https://t.co/oGqi0vsc4G">https://t.co/oGqi0vsc4G</a></p>&mdash; まきえたん🥦☘️ (@makietanX) <a href="https://twitter.com/makietanX/status/1846180955197001847?ref_src=twsrc%5Etfw">October 15, 2024</a></blockquote>
<script async="" src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>]]></content><author><name>makietan</name></author><category term="gourmet" /><summary type="html"><![CDATA[焼肉ライクの肉の質って大して求めてなくて、どちらかといえば誰にも邪魔されずに1人で焼き肉ができるという体験型飲食店だと思っている。]]></summary></entry><entry><title type="html">小倉唯のファンならお風呂に入ろう</title><link href="https://makietan.github.io/otaku/2024/10/14/report.html" rel="alternate" type="text/html" title="小倉唯のファンならお風呂に入ろう" /><published>2024-10-14T00:00:00+09:00</published><updated>2024-10-14T00:00:00+09:00</updated><id>https://makietan.github.io/otaku/2024/10/14/report</id><content type="html" xml:base="https://makietan.github.io/otaku/2024/10/14/report.html"><![CDATA[<p>わくシャン = 「わくわくシャンプー＆リンス」。</p>

<div class="card">
  <a href="https://www.youtube.com/watch?v=wYWNCKhMBaY"></a>
  <div class="card__header">
    <a href="https://www.youtube.com/watch?v=wYWNCKhMBaY">www.youtube.com</a>
  </div>
  <div class="card__image">
    <img src="https://i.ytimg.com/vi/wYWNCKhMBaY/maxresdefault.jpg" />
  </div>
  <div class="card__title">
    <p>わくわくシャンプー＆リンス - YouTube</p>
  </div>
  <div class="card__description">
    <p>Provided to YouTube by Nippon Columbia Co., Ltd./NIPPONOPHONEわくわくシャンプー＆リンス · Yui OguraBloomy℗ Nippon Columbia Co., Ltd./NIPPONOPHONEReleased on: 2024-09-18Ly...</p>
  </div>
</div>

<p>「わくわくシャンプー＆リンス」という曲にちなんだライブでの発言から、「風呂キャンセル界隈」（風呂やシャワーをパスすること）について語る流れになった。</p>

<p>風呂に入れ。シャワーだけじゃ落ちない汚れも多々あるんだ。</p>

<p>小倉唯のファンが風呂に入らないというわけではないので注意しよう。</p>

<p>ちなみに臭う場合は、汗をかいた後でもない限りは、口臭か衣類の悪臭であることが多い。</p>

<p>口腔疾患は喋ったときに分かるので、「ちょっとだけにおいが気になるかも・・・歯医者行ってみたら？」や「少し口臭がするよ、最近体調悪くない？検診とか行ってる？行ったほうがいいよ」とでも言ってあげるといい。</p>

<p>衣類は本当にどうしたらいいのか分からないので頑張ろう…。</p>

<hr />

<blockquote class="twitter-tweet tw-align-center"><p lang="ja" dir="ltr">小倉唯ちゃん：<br />みんな帰ったらちゃんとわくシャンしてくださいね<br />最近お風呂キャンセル界隈を聞いたので<br />お風呂キャンセル界隈ってお風呂に入らないのか、シャワーを浴びないのか<br />どっちもなの？シャワーも浴びないの！？<br />ええええええ！？(ドン引き)<br />ダメだよー！わかった？ <a href="https://twitter.com/hashtag/%E5%B0%8F%E5%80%89%E5%94%AF%E3%83%A9%E3%82%A4%E3%83%96%E3%83%84%E3%82%A2%E3%83%BC2024?src=hash&amp;ref_src=twsrc%5Etfw">#小倉唯ライブツアー2024</a></p>&mdash; たっくん (@n092t) <a href="https://twitter.com/n092t/status/1845799250170650916?ref_src=twsrc%5Etfw">October 14, 2024</a></blockquote>
<script async="" src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>]]></content><author><name>makietan</name></author><category term="otaku" /><summary type="html"><![CDATA[わくシャン = 「わくわくシャンプー＆リンス」。]]></summary></entry><entry><title type="html">YouTube Anime Weekend でコードギアス奪還のロゼが配信される</title><link href="https://makietan.github.io/otaku/youtube/2024/10/13/report.html" rel="alternate" type="text/html" title="YouTube Anime Weekend でコードギアス奪還のロゼが配信される" /><published>2024-10-13T00:00:00+09:00</published><updated>2024-10-13T00:00:00+09:00</updated><id>https://makietan.github.io/otaku/youtube/2024/10/13/report</id><content type="html" xml:base="https://makietan.github.io/otaku/youtube/2024/10/13/report.html"><![CDATA[<p>いやーこれは暑いね。</p>

<p>第一話、第二話の配信らしく続きが見たくなるのは間違いないだろう。</p>

<p>粋なことしてくれるね。</p>

<p>ただ、配信チャンネルがコードギアス公式ではなく、ディズニープラスチャンネルなので見逃さないようにしたい。</p>

<div class="card">
  <a href="https://www.youtube.com/watch?v=MkV9FVxUjE0"></a>
  <div class="card__header">
    <a href="https://www.youtube.com/watch?v=MkV9FVxUjE0">www.youtube.com</a>
  </div>
  <div class="card__image">
    <img src="https://i.ytimg.com/vi/MkV9FVxUjE0/maxresdefault.jpg" />
  </div>
  <div class="card__title">
    <p>【10/20 日 21:00頃~】1〜2話 期間限定 無料 『コードギアス 奪還のロゼ』｜シリーズ最新作｜Disney+ (ディズニープラス） - YouTube</p>
  </div>
  <div class="card__description">
    <p>Disney+（ディズニープラス）で独占配信中！登録▶︎https://www.youtube.com/channel/UCm9iPGnmMYtZkNQ3IoBIPIA?sub_confirmation=1詳細▶︎ https://www.disneyplus.com/ja-jp?cid=DTCI-Organic...</p>
  </div>
</div>

<hr />

<blockquote class="twitter-tweet tw-align-center"><p lang="ja" dir="ltr">【コードギアスチャンネル】<br />『YouTube Anime Weekend』にて、<br />「コードギアス 反逆のルルーシュ」TVシリーズ<br />「コードギアス 奪還のロゼ」<br />セレクト配信実施決定！<br /><br />詳細はこちら→<a href="https://t.co/t1m2trHFHE">https://t.co/t1m2trHFHE</a><a href="https://twitter.com/hashtag/geassp?src=hash&amp;ref_src=twsrc%5Etfw">#geassp</a> <a href="https://twitter.com/hashtag/%E3%82%B3%E3%83%BC%E3%83%89%E3%82%AE%E3%82%A2%E3%82%B9?src=hash&amp;ref_src=twsrc%5Etfw">#コードギアス</a> <a href="https://t.co/se5YmfM7bx">pic.twitter.com/se5YmfM7bx</a></p>&mdash; コードギアスプロジェクト (@GEASSPROJECT) <a href="https://twitter.com/GEASSPROJECT/status/1840663623880073300?ref_src=twsrc%5Etfw">September 30, 2024</a></blockquote>
<script async="" src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>]]></content><author><name>makietan</name></author><category term="otaku" /><category term="youtube" /><summary type="html"><![CDATA[いやーこれは暑いね。]]></summary></entry><entry><title type="html">ハッピーセットにわんだふるぷりきゅあがくるらしいので集めたいと思う</title><link href="https://makietan.github.io/gourmet/2024/10/12/report.html" rel="alternate" type="text/html" title="ハッピーセットにわんだふるぷりきゅあがくるらしいので集めたいと思う" /><published>2024-10-12T00:00:00+09:00</published><updated>2024-10-12T00:00:00+09:00</updated><id>https://makietan.github.io/gourmet/2024/10/12/report</id><content type="html" xml:base="https://makietan.github.io/gourmet/2024/10/12/report.html"><![CDATA[<p>ハッピーセットにプリキュアがくると集めたくなる。</p>

<p>カービィとかは異常者がたくさん買い占めるので集めるのは難しいがこちらは多分大丈夫だろう。</p>

<blockquote class="twitter-tweet tw-align-center"><p lang="ja" dir="ltr">ハッピーセット®にやってくる！<a href="https://twitter.com/hashtag/%E3%82%8F%E3%82%93%E3%81%A0%E3%81%B5%E3%82%8B%E3%81%B7%E3%82%8A%E3%81%8D%E3%82%85%E3%81%82?src=hash&amp;ref_src=twsrc%5Etfw">#わんだふるぷりきゅあ</a><br /><br />10/18(金)から☆<br />オシャレもなりきりも楽しんじゃお！<a href="https://twitter.com/hashtag/precure?src=hash&amp;ref_src=twsrc%5Etfw">#precure</a><br /><br />詳しくは動画をタップ！</p>&mdash; マクドナルド (@McDonaldsJapan) <a href="https://twitter.com/McDonaldsJapan/status/1844596288274272526?ref_src=twsrc%5Etfw">October 11, 2024</a></blockquote>
<script async="" src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>

<ul>
  <li>まわる！キラキラ　フレンドリータクト</li>
  <li>こむぎ＆ユキ　ペアブレスレット</li>
  <li>のぞいてみて！　ワンダフルパクトキャリービューワー</li>
</ul>

<p>初週は3つ。</p>

<ul>
  <li>プリキュアにへんしん！　クリアコーム</li>
  <li>キラニコトランク　おしゃれミラー</li>
  <li>こむぎとおでかけ！　パスケース</li>
</ul>

<p>次週も3つ。</p>

<p>それ以降は全種類らしい。</p>

<p>フレンドリータクトが欲しいけど当たるかなぁ…。</p>]]></content><author><name>makietan</name></author><category term="gourmet" /><summary type="html"><![CDATA[ハッピーセットにプリキュアがくると集めたくなる。]]></summary></entry><entry><title type="html">「ニンテンドーサウンドクロック Alarmo」が欲しいと思ったが税込12,980円だと…</title><link href="https://makietan.github.io/hobby/2024/10/11/report.html" rel="alternate" type="text/html" title="「ニンテンドーサウンドクロック Alarmo」が欲しいと思ったが税込12,980円だと…" /><published>2024-10-11T00:00:00+09:00</published><updated>2024-10-11T00:00:00+09:00</updated><id>https://makietan.github.io/hobby/2024/10/11/report</id><content type="html" xml:base="https://makietan.github.io/hobby/2024/10/11/report.html"><![CDATA[<p>ただの音がなる時計だと思っていたが1万円越えるらしい。</p>

<p>ネタが満載なんだろうが、マリオ以外はあまり興味がない人間にとってこの価格は手が出せない.</p>

<p>抽選方式でしか買えない状態なのでさらに手が出せない状態だ。</p>

<blockquote class="twitter-tweet tw-align-center"><p lang="ja" dir="ltr">[任天堂HP]あなたの動きに反応する目覚まし時計「ニンテンドーサウンドクロック Alarmo」の紹介映像と公式サイトを公開しました。<br />マイニンテンドーストア（Nintendo Switch Online加入者限定）、Nintendo TOKYO/OSAKA/KYOTOにてご購入いただけます。<a href="https://twitter.com/hashtag/Alarmo?src=hash&amp;ref_src=twsrc%5Etfw">#Alarmo</a><a href="https://t.co/5hzuzSaYAX">https://t.co/5hzuzSaYAX</a></p>&mdash; 任天堂株式会社 (@Nintendo) <a href="https://twitter.com/Nintendo/status/1844001518946803808?ref_src=twsrc%5Etfw">October 9, 2024</a></blockquote>
<script async="" src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>

<blockquote>
  <p>Alarmoは、寝ている間も、あなたを見守っています。</p>
</blockquote>

<p>…ほう。</p>

<p>ゴールドAlarmo「おまえの寝ている姿をずっと見てたぞ」「本当によく頑張ったな？」「遂に我慢が報われ莫大な富を得る」</p>

<p>なんてな。</p>]]></content><author><name>makietan</name></author><category term="hobby" /><summary type="html"><![CDATA[ただの音がなる時計だと思っていたが1万円越えるらしい。]]></summary></entry><entry><title type="html">レーバテインのデモリッションガン比較</title><link href="https://makietan.github.io/game/srwdd/2024/10/10/report.html" rel="alternate" type="text/html" title="レーバテインのデモリッションガン比較" /><published>2024-10-10T00:00:00+09:00</published><updated>2024-10-10T00:00:00+09:00</updated><id>https://makietan.github.io/game/srwdd/2024/10/10/report</id><content type="html" xml:base="https://makietan.github.io/game/srwdd/2024/10/10/report.html"><![CDATA[<h2 id="比較対象">比較対象</h2>

<h3 id="ssr-デモリッションガン-ガンハウザーモードmap">SSR+ デモリッションガン ガン・ハウザーモード（MAP）</h3>
<h4 id="必殺技">必殺技</h4>
<ul>
  <li>SSR+ デモリッションガン</li>
  <li>SSR+ スラスト・コンバット
    <h4 id="効果">効果</h4>
  </li>
  <li>射程+1（重複不可）</li>
  <li>移動力+1（重複可）</li>
  <li>ARX-8 レーバテイン装備時
    <ul>
      <li>敵バリア-70%</li>
      <li>斬撃・実弾ブレイクゲージ減少量100%</li>
      <li>デモリッションガン ガン・ハウザーモード（MAP）でブレイク時
        <ul>
          <li>敵ブレイクゲージ復帰アクション数+1</li>
        </ul>
      </li>
      <li>気力130以上
        <ul>
          <li>敵防御力・運動性-32%</li>
          <li>被ダメージ-3500</li>
        </ul>
      </li>
    </ul>
  </li>
  <li>デモリッションガン命中時「覚醒」</li>
  <li>サイズ差減少効果無効</li>
</ul>

<h3 id="ssr-デモリッションガン">SSR+ デモリッションガン</h3>
<h4 id="必殺技-1">必殺技</h4>
<ul>
  <li>SSR+ デモリッションガン ガン・ハウザーモード（MAP）</li>
  <li>SSR+ スラスト・コンバット
    <h4 id="効果-1">効果</h4>
  </li>
  <li>デモリッションガン命中時「覚醒」</li>
  <li>ARX-8 レーバテイン装備時
    <ul>
      <li>サイズ差減少効果無効</li>
      <li>敵バリア-70%</li>
    </ul>
  </li>
  <li>射程+1（重複不可）</li>
  <li>移動力+1（重複可）</li>
  <li>ブレイクゲージ減少量+35%
    <h2 id="比較気力1804マス以上離戦闘回数5">比較（気力180・4マス以上離・戦闘回数5）</h2>
  </li>
</ul>

<p>デバフについては記載しない。</p>

<p>思ったほど変わらない結果に…。</p>

<p>与ダメージがあるのでデモリッションをMAINにしてもいい感じになる。</p>

<canvas id="chart-1" style="background-color: #fff"></canvas>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<script>
    // chart
    const MAX_MINUS_DEFAULT_KIRYOKU_DIVIDED_BY_10 = (180 - 100) / 10;
    const NUMBER_OF_BATTLES = 5;
    const ctx1 = document.getElementById('chart-1');
    new Chart(ctx1, {
        type: 'radar',
        data: {
            labels: ["HP", "攻撃力", "防御力", "照準値", "運動性", "必殺技威力", "与ダメージ", "命中率", "回避率"],
            datasets: [
                {
                    label: "デモリッションガン ガン・ハウザーモード（MAP）",
                    data: [
                       0, // HP
                       23.5 + 8 * MAX_MINUS_DEFAULT_KIRYOKU_DIVIDED_BY_10 + 2 * MAX_MINUS_DEFAULT_KIRYOKU_DIVIDED_BY_10, // 攻撃力
                       0, // 防御力
                       23.5 + 6 * MAX_MINUS_DEFAULT_KIRYOKU_DIVIDED_BY_10 + 2 * MAX_MINUS_DEFAULT_KIRYOKU_DIVIDED_BY_10, // 照準値
                       23.5 + 8 * MAX_MINUS_DEFAULT_KIRYOKU_DIVIDED_BY_10 + 2 * MAX_MINUS_DEFAULT_KIRYOKU_DIVIDED_BY_10, // 運動性
                       8.5 * MAX_MINUS_DEFAULT_KIRYOKU_DIVIDED_BY_10, // 必殺技威力
                       0, // 与ダメージ
                       0, // 命中率
                       35 // 回避率
                    ]
                },
                {
                    label: "デモリッションガン",
                    data: [
                       0, // HP
                       22.5 + 7 * MAX_MINUS_DEFAULT_KIRYOKU_DIVIDED_BY_10 + 2 * MAX_MINUS_DEFAULT_KIRYOKU_DIVIDED_BY_10 + 6.5, // 攻撃力
                       6.5, // 防御力
                       22.5 + 6 * MAX_MINUS_DEFAULT_KIRYOKU_DIVIDED_BY_10 + 2 * MAX_MINUS_DEFAULT_KIRYOKU_DIVIDED_BY_10 + 6.5, // 照準値
                       22.5 + 6 * MAX_MINUS_DEFAULT_KIRYOKU_DIVIDED_BY_10 + 2 * MAX_MINUS_DEFAULT_KIRYOKU_DIVIDED_BY_10 + 10 + 6.5, // 運動性
                       8 * MAX_MINUS_DEFAULT_KIRYOKU_DIVIDED_BY_10, // 必殺技威力
                       35, // 与ダメージ
                       25, // 命中率
                       35 // 回避率
                    ]
                }
            ]
        }
    });
</script>]]></content><author><name>makietan</name></author><category term="game" /><category term="srwdd" /><summary type="html"><![CDATA[比較対象]]></summary></entry><entry><title type="html">レーバテインの必殺技装備比較</title><link href="https://makietan.github.io/game/srwdd/2024/10/09/report.html" rel="alternate" type="text/html" title="レーバテインの必殺技装備比較" /><published>2024-10-09T00:00:00+09:00</published><updated>2024-10-09T00:00:00+09:00</updated><id>https://makietan.github.io/game/srwdd/2024/10/09/report</id><content type="html" xml:base="https://makietan.github.io/game/srwdd/2024/10/09/report.html"><![CDATA[<h2 id="比較対象">比較対象</h2>

<ul>
  <li>SSR+ デモリッションガン ガン・ハウザーモード（MAP）
    <ul>
      <li>移動力+1（重複可）</li>
      <li>ブレイクゲージ減少量35%</li>
    </ul>
  </li>
  <li>SSR+ デモリッションガン
    <ul>
      <li>射程+1</li>
      <li>命中時「覚醒」</li>
      <li>サイズ差減少効果無効</li>
    </ul>
  </li>
  <li>SSR+ スラスト・コンバット</li>
  <li>SSR+ 76mm散弾砲ボクサー2</li>
  <li>SSR+ 単分子カッター</li>
</ul>

<h2 id="比較気力1804マス以上離戦闘回数5">比較（気力180・4マス以上離・戦闘回数5）</h2>

<p>デバフについては記載しない。</p>

<p>スラスト・コンバットの運動性が最高。</p>

<p>次点でデモリッションガン2種。</p>

<p>基本はデモリッションガン2種とスラスト・コンバットの組み合わせになるだろう。</p>

<canvas id="chart-1" style="background-color: #fff"></canvas>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<script>
    // chart
    const MAX_MINUS_DEFAULT_KIRYOKU_DIVIDED_BY_10 = (180 - 100) / 10;
    const NUMBER_OF_BATTLES = 5;
    const ctx1 = document.getElementById('chart-1');
    new Chart(ctx1, {
        type: 'radar',
        data: {
            labels: ["HP", "攻撃力", "防御力", "照準値", "運動性", "必殺技威力"],
            datasets: [
                {
                    label: "デモリッションガン ガン・ハウザーモード（MAP）",
                    data: [
                        0, // HP
                        2 * MAX_MINUS_DEFAULT_KIRYOKU_DIVIDED_BY_10, // 攻撃力
                        0, // 防御力
                        2 * MAX_MINUS_DEFAULT_KIRYOKU_DIVIDED_BY_10, // 照準値
                        2 * MAX_MINUS_DEFAULT_KIRYOKU_DIVIDED_BY_10, // 運動性
                        0 // 必殺技威力
                    ]
                },
                {
                    label: "デモリッションガン",
                    data: [
                        0, // HP
                        2 * MAX_MINUS_DEFAULT_KIRYOKU_DIVIDED_BY_10, // 攻撃力
                        0, // 防御力
                        2 * MAX_MINUS_DEFAULT_KIRYOKU_DIVIDED_BY_10, // 照準値
                        2 * MAX_MINUS_DEFAULT_KIRYOKU_DIVIDED_BY_10, // 運動性
                        0 // 必殺技威力
                    ]
                },
                {
                    label: "スラスト・コンバット",
                    data: [
                        0, // HP
                        6.5, // 攻撃力
                        6.5, // 防御力
                        6.5, // 照準値
                        10 + 6.5, // 運動性
                        0 // 必殺技威力
                    ]
                },
                {
                    label: "76mm散弾砲ボクサー2",
                    data: [
                        0, // HP
                        11, // 攻撃力
                        0, // 防御力
                        0, // 照準値
                        11, // 運動性
                        16 // 必殺技威力
                    ]
                },
                {
                    label: "単分子カッター",
                    data: [
                        0, // HP
                        6.5, // 攻撃力
                        6.5, // 防御力
                        6.5, // 照準値
                        6.5, // 運動性
                        0 // 必殺技威力
                    ]
                }
            ]
        }
    });
</script>]]></content><author><name>makietan</name></author><category term="game" /><category term="srwdd" /><summary type="html"><![CDATA[比較対象]]></summary></entry></feed>